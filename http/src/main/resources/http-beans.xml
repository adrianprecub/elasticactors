<!--
  ~ Copyright 2013 Joost van de Wijgerd
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/util
	                       http://www.springframework.org/schema/util/spring-util.xsd">
    <!--<context:spring-configured/>
    <context:annotation-config/>-->

    <util:map id="messageSerializers" key-type="java.lang.Class"
                                      value-type="org.elasticsoftware.elasticactors.serialization.MessageSerializer">

    </util:map>

    <util:map id="messageDeserializers" key-type="java.lang.Class"
                                          value-type="org.elasticsoftware.elasticactors.serialization.MessageDeserializer">

    </util:map>

    <bean id="asyncHttpClientConfigBuilder" class="com.ning.http.client.AsyncHttpClientConfig$Builder">
        <property name="compressionEnabled" value="true"/>
        <property name="followRedirects" value="true"/>
    </bean>

    <bean id="asyncHttpClient" class="com.ning.http.client.AsyncHttpClient">
        <constructor-arg>
            <bean factory-bean="asyncHttpClientConfigBuilder" factory-method="build"/>
        </constructor-arg>
    </bean>

    <bean id="httpClient" class="org.elasticsoftware.elasticactors.http.actors.HttpClientService">
        <constructor-arg ref="asyncHttpClient"/>
    </bean>

    <bean id="runTime" class="java.lang.Runtime" factory-method="getRuntime"/>

        <bean id="localMaxThread" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="targetObject">
                <ref bean="runTime"/>
            </property>
            <property name="targetMethod">
                <value>availableProcessors</value>
            </property>
        </bean>

        <bean id="bossExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool">
            <constructor-arg index="0">
                <bean class="java.util.concurrent.Executors" factory-method="defaultThreadFactory"/>
            </constructor-arg>
        </bean>

        <bean id="workerExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool">
            <constructor-arg index="0">
                <bean class="java.util.concurrent.Executors" factory-method="defaultThreadFactory"/>
            </constructor-arg>
        </bean>

        <bean id="nioServerSocketChannelFactory" class="org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory">
            <constructor-arg index="0" ref="bossExecutor"/>
            <constructor-arg index="1" ref="workerExecutor"/>
            <constructor-arg index="2" type="int" ref="localMaxThread"/>
        </bean>

    <bean id="httpServer" class="org.elasticsoftware.elasticactors.http.actors.HttpService"/>

    <bean id="nettyHttpServer" class="org.elasticsoftware.elasticactors.http.HttpServer" init-method="init" destroy-method="destroy">
        <property name="channelFactory" ref="nioServerSocketChannelFactory"/>
        <property name="httpService" ref="httpServer"/>
        <property name="listenPort" value="${listenPort}"/>
    </bean>



</beans>

